openapi: 3.0.0
info:
    title: GreenShare
    contact: {}
    version: '1.0'
servers:
    - url: http://server.vgafib.org
      variables: {}
paths:
    /auth/register:
        post:
            tags:
                - Auth
            summary: Register User
            operationId: RegisterUser
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterUserRequest'
                        example:
                            email: jordi@upc.com
                            password: secret123
                            nickname: jordi
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdToken'
                            example:
                                id: 28
                                token: 'NwinjHHz5LDCYTrfXyhM6WcEYUU2PiNF'
                '400':
                    description: Wrong parameters
                    content:
                        application/json:
                            example:
                                error: 'Wrong parameters: invalid or missing email'
                '500':
                    description: Couldn't create user. E.g. email already in use
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                            example:
                                error: 'Internal server error'
            deprecated: false
    /auth/login:
        post:
            tags:
                - Auth
            summary: Login User
            operationId: LoginUser
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginUserRequest'
                        example:
                            email: john@greenshare.com
                            password: secret123
                required: true
            responses:
                '200':
                    description: ''
                    headers: {}
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/IdToken'
                            example:
                                id: 28
                                token: 'NwinjHHz5LDCYTrfXyhM6WcEYUU2PiNF'
                '400':
                    description: Wrong parameters
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                            example:
                                error: 'Wrong parameters: invalid or missing email'
                '401':
                    description: Unauthorized because invalid credentials
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                            example:
                                error: 'Invalid credentials'
            deprecated: false
    /auth/validate:
        post:
            tags:
                - Auth
            summary: Validate token
            operationId: ValidateToken
            parameters: []
            requestBody:
                description: ''
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TokenValidationRequest'
                        example:
                            id: 28
                            token: 'NwinjHHz5LDCYTrfXyhM6WcEYUU2PiNF'
                required: true
            responses:
                '200':
                    description: 'Token was successfully validated'
                '400':
                    description: Wrong parameters
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                            example:
                                error: 'Wrong parameters: invalid or missing token'
                '403':
                    description: 'Token is not valid'
            deprecated: false
components:
    schemas:
        RegisterUserRequest:
            title: RegisterUserRequest
            required:
                - email
                - password
                - nickname
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
                nickname:
                    type: string
            example:
                email: jordi@upc.com
                password: secret123
                nickname: jordi
        LoginUserRequest:
            title: LoginUserRequest
            required:
                - email
                - password
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
            example:
                email: john@greenshare.com
                password: secret123
        TokenValidationRequest:
            title: TokenValidationRequest
            required:
                - id
                - token
            type: object
            properties:
                id:
                    type: integer
                token:
                    type: string
        IdToken:
            title: IdToken
            type: object
            properties:
                id:
                    type: integer
                token:
                    type: string
        ErrorResponse:
            title: ErrorResponse
            type: object
            properties:
                error:
                    type: string
tags:
    - name: Auth
      description: 'Authorization section for login and register user'
